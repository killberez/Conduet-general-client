import { createContext } from "react";

const GraphContext = createContext({
  data:[],
  tooltip: {
    isVisible: false,
    position: {x:0, y:0},
    data: {},
  },
  settings:{
    requestURL: "",
    keyList: [],
    labelsArray: [],
    selectedChartType: "",
    primaryAxisKey: "",
    primaryAxisMin: -Infinity,
    primaryAxisMax: Infinity,
    primaryAxisKeyType: "",
    secondaryAxisKey: "",
    secondaryAxisMin: -Infinity,
    secondaryAxisMax: Infinity,
    secondaryAxisKeyType: "",
    colorKey: undefined,
    colorRange: [],
    parentKey: "_root_",
    graphHeight: 800,
    graphWidth: 450,
    title: "",
    description: "",
    markOpacity:1,
    markRadius: 1,
    note: "",
    footer: "",
    showTicks: true,
    showLabels: true,
    showValues: false,
    showKeys: true,
    showTooltips: true,
    rotateLabel: false,
    gridColor: "#cccccc",
    labelColor: "#212121",
    baseColor: "#5682a3",
    backgroundColor: "#ffffff",
    labelPositionInside: true,
    reverse: false,
    sort: false,
    useKeys: false,
    keysToUse: [],
    tickFormat: "none",
    barPadding: 10,
    roundedCorner: 0,
    mouseOverValueFormat: "none",
    mouseOverValueSuffix: undefined,
    mouseOverValuePrefix: undefined,
    mouseOverLabelFormat: "none",
    mouseOverLabelSuffix: undefined,
    mouseOverLabelPrefix: undefined,
  },
  updateSelectedChartType: (data: any) => {},
  updatePrimaryAxisKey: (data: any) => {},
  updateSecondaryAxisKey: (data: any) => {},
  updatePrimaryAxisKeyType: (data: any) => {},
  updateSecondaryAxisKeyType: (data: any) => {},
  updateColorKey: (data: any) => {},
  updatePrimaryAxisMin: (data: any) => {},
  updatePrimaryAxisMax: (data: any) => {},
  updateSecondaryAxisMin: (data: any) => {},
  updateSecondaryAxisMax: (data: any) => {},
  updateColorRange: (data: any) => {},
  updateParentKey: (data: any) => {},
  updateGraphHeight: (data: any) => {},
  updateGraphWidth: (data: any) => {},
  updateTitle: (data: any) => {},
  updateDescription: (data: any) => {},
  updateNote: (data: any) => {},
  updateFooter: (data: any) => {},
  updateShowTicks: (data: any) => {},
  updateShowLabels: (data: any) => {},
  updateShowValues: (data: any) => {},
  updateShowKeys: (data: any) => {},
  updateGridColor: (data: any) => {},
  updateLabelColor: (data: any) => {},
  updateBaseColor: (data: any) => {},
  updateBackgroundColor: (data: any) => {},
  updateMarkOpacity: (data:any) => {},
  updateRequestURL: (data: any) => {},
  updateRotateLabel: (data: any) => {},
  updateLabelPositionInside: (data: any) => {},
  updateReverse: (data: any) => {},
  updateSort: (data: any) => {},
  updateKeysToUse: (data: any) => {},
  updateLabelsArray: (data: any) => {},
  updateTooltip: (data: any) => {},
  updateTickFormat: (data: any) => {},
  updateBarPadding: (data: any) => {},
  updateRoundedCorner: (data: any) => {},
  updateKeyList: (data: any) => {},
  updateUseKeys: (data: any) => {},
  updateData: (data:any) => {},
  updateMarkRadius: (data: any) => {},
  updateMouseOverValueFormat: (data:any) => {},
  updateMouseOverValueSuffix: (data:any) => {},
  updateMouseOverValuePrefix: (data:any) => {},
  updateMouseOverLabelFormat: (data:any) => {},
  updateMouseOverLabelSuffix: (data:any) => {},
  updateMouseOverLabelPrefix: (data:any) => {},
});

export default GraphContext;
